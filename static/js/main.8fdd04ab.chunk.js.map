{"version":3,"sources":["Header.js","LeftContainer.js","DataContainer.js","BigMap.js","Map.js","App.js","serviceWorker.js","index.js","map.geojson"],"names":["Header","styled","div","Title","valuetext","value","LeftContainer","props","CustomSlider","Slider","defaultValue","radius","getAriaValueText","aria-labelledby","max","min","step","marks","label","valueLabelDisplay","onChange","event","r","updateRadius","CloseButton","IconButton","Headline","pieData","barData","text","crime","this","categoryData","randomColor","Math","floor","random","toString","push","title","color","markers","length","formatData","aria-label","onClick","updateCheckDataCon","latitude","longitude","data","style","margin","height","width","document","getElementById","offsetWidth","ylabel","xlabel","PureComponent","BigMap","console","log","useState","setMarkers","setCategoryData","handleClick","lngLat","http","ENDPOINT","axios","get","then","response","MyCircle","Container","Circle","zoom","viewport","Marker","isHovered","updateIsHovered","check1","check2","check3","check4","check5","check6","filters","updateFilters","ColumnDiv","setCheck","status","handleRequest","className","mapboxApiAccessToken","mapStyle","onDblClick","key","offsetLeft","offsetTop","map","m","i","draggable","onDrag","viewBox","cursor","fill","stroke","transform","onMouseEnter","onMouseLeave","d","id","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8fdd04ab.chunk.js","sourcesContent":["import React, {useState, PureComponent} from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Header() {\n    const Header = styled.div`\n    background: pink;\n  `;\n\n    const Title = styled.div`\n    margin: 0 0;\n    padding: 0px 500px;\n    font-size: 1.5em;\n    display: inline-block;\n\n  `;\n\n\n    return(\n\n      <Header>\n        <Title>CRIME IN MY AREA</Title>\n      </Header>\n    );\n\n\n}","import React, {useState, PureComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"react-bootstrap\";\nimport Slider from '@material-ui/core/Slider';\nimport Checkbox from '@material-ui/core/CheckBox';\nimport ReactMapGL, {Marker} from \"react-map-gl\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function LeftContainer(props) {\n\nconst marks = [\n  {\n    value: 0,\n    label: '0',\n  },\n  {\n    value: 0.5,\n    label: '0.5',\n  },\n  {\n    value: 1,\n    label: '1',\n  },\n  {\n      value: 1.5,\n      label: '1.5',\n   },\n  {\n    value: 2,\n    label: '2',\n  },\n];\n\n\n\n//     const InfoBox = styled.div`\n//           height: 400px;\n//           width: 400px;\n//           margin: 20px 0px 0px 10px;\n//           background: white;\n//    `;\n//    const Box = styled.div`\n//              height: 100px;\n//              width: 350px;\n//              background: white;\n//       `;\n   const CustomSlider = styled(Slider)`\n        // padding: 50px;\n   `;\n\n        return(\n            <div>\n                <h3>Highlight Features Containing Similar Data</h3>\n                <p>Hover over counties to highlight counties that share the same name.</p>\n                <div>\n                    <CustomSlider\n                        defaultValue={props.radius}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        max={2}\n                        min={0}\n                        step={0.25}\n                        marks={marks}\n                        valueLabelDisplay=\"auto\"\n                        onChange={(event, r)=>{props.updateRadius(r)}}\n                      />\n                </div>\n                {/* <FormControlLabel\n                    control={\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                         }\n                         label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                    }\n                    label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                         }\n                         label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                    }\n                    label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                         }\n                         label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                    }\n                    label=\"Secondary\"\n                /> */}\n            </div>\n        );\n\n\n}","import React, {useState, PureComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"react-bootstrap\";\nimport Slider from '@material-ui/core/Slider';\nimport ReactMapGL, {Marker} from \"react-map-gl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport PieChart from 'react-minimal-pie-chart';\nimport BarChart from 'react-bar-chart';\n\n\n\nconst CloseButton = styled(IconButton)`\n    margin: 0px; 0px;\n`;\n\nconst Headline = styled.div`\n    font-weight: bold;\n    font-size: 2em;\n    text-align: center;\n`;\n\nvar pieData = [\n\n  ];\n\nconst barData = [\n    {text: '1990', value: 500},\n    {text: '1991', value: 300}\n  ];\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n//     const InfoBox = styled.div`\n//           height: 400px;\n//           width: 400px;\n//           margin: 20px 0px 0px 10px;\n//           background: white;\n//    `;\n//    const Box = styled.div`\n//              height: 200px;\n//              width: 350px;\n//              background: white;\n//       `;\n\nexport default class LeftContainer extends PureComponent {\n    formatData() {\n        pieData = [];\n        for (const crime in this.props.categoryData) {\n            const randomColor = '#' + Math.floor(Math.random()*16777215).toString(16);\n\n            pieData.push({\n                title: crime,\n                value: this.props.categoryData[crime],\n                color: randomColor\n            })\n        }\n    }\n\n    render() {\n\n        if (this.props.markers.length === 0 || !this.props.categoryData) {\n            return <div></div>;\n        } else {\n            this.formatData();\n\n            return(\n                <div>\n                    <CloseButton aria-label=\"close\" onClick={()=>{this.props.updateCheckDataCon(false); this.props.markers.length = 0}}>\n                        <CloseIcon />\n                    </CloseButton>\n                    <Headline>Crime Data</Headline>\n                    <p>Latitude: {this.props.markers[0].latitude}</p>\n                    <p>Longitude: {this.props.markers[0].longitude}</p>\n                    <p>Radius: {this.props.radius}</p>\n                    <p>Crime Score: {}</p>\n                    <PieChart data={pieData} />\n                    <BarChart style={{margin:\"20px\"}}\n                        height={500}\n                        width={document.getElementById(\"right-col\").offsetWidth}\n                        data={barData}\n                        ylabel='Number of Crimes'\n                        xlabel='Year'\n                    />\n                </div>\n            );\n        }\n    }\n\n\n}\n","import React, {useState, PureComponent} from \"react\";\nimport ReactMapGL, {Marker, Layer} from \"react-map-gl\";\nimport * as zipCode from \"./zip-code.json\";\nimport {Button, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport Header from \"./Header\";\nimport LeftContainer from \"./LeftContainer\";\nimport data from \"./map.geojson\";\nimport DataContainer from \"./DataContainer\";\nimport {Rectangle, Circle, Ellipse, Line, Polyline, CornerBox, Triangle} from 'react-shapes';\n\nimport axios from 'axios'\n\n\nexport default function BigMap() {\n  console.log(\"IM IN BIGMAP\")\n  \n  \n    const SIZE = 30;\n    const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n    c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n    C20.1,15.8,20.2,15.8,20.2,15.7z`;\n    const [count,setCount] = useState(0);\n    const [countt,setCountt] = useState(0);\n\n    const [radius, updateRadius] = useState(1);\n    const [markers, setMarkers] = useState([]);\n\n    const [categoryData, setCategoryData] = useState(null);\n\n    const handleClick = ({lngLat: [longitude, latitude]}) => {\n      setMarkers(markers => [{longitude, latitude}]);\n      const http = ENDPOINT + longitude + \"/\" + latitude + \"/\" + .1;\n      axios.get(http)\n      .then((response) => {\n        console.log(\"Response: \", response.data);\n        setCategoryData(response.data);\n        \n      });\n    }\n\n    const ENDPOINT = \"https://ec2-18-188-137-58.us-east-2.compute.amazonaws.com:8000/crimes/\";\n    \n\n\n\n  const Map = styled(Container)`\n        height: 500px;\n        width: 600px;\n        margin: 200px 0px 0px 1300px;\n        background: white;\n  `;\n\n  const MyCircle = styled(Circle)`\n    opacity: 0.2;\n  `;\n\n  const [viewport,setViewport] = useState({\n    latitude: 47.6062,\n    longitude: -122.3321,\n    width: \"100%\",\n    height: \"95vh\",\n    zoom: 10.5\n  });\n\n  const MyMarker = styled(Marker)`\n    background: white;\n  `;\n\n    const [isHovered, updateIsHovered] = useState(false);\n\n    const [checkDataCon, updateCheckDataCon] = useState(false);\n\n  const [filters, updateFilters] = useState({\n    check1: true,\n    check2: false,\n    check3: false,\n    check4: false,\n    check5: false,\n    check6: false\n  });\n\n  const ColumnDiv = styled.div`\n    float: left;\n    padding: 10px;\n    width: 30%;\n    word-wrap: break-word;    \n  `;\n  \n  const [check, setCheck] = useState(false);\n\n  const [status, updateStatus] = useState(null);\n  \n  const handleRequest = () => { \n    //  http = ENDPOINT + \"/\" + markers.latitude + \"/\" + markers.longitude + \"/\" + radius;\n    // axios.get('http://jservice.io/api/random')\n    //   .then((response) => {\n    //     console.log(response);\n    //     updateStatus(response);\n    //     console.log(status);\n    //   });\n    console.log(status);\n    \n    }\n    \n  \n\n    return (\n      <div>\n        <ColumnDiv className=\"column left\">\n          <LeftContainer filters={filters} updateFilters={updateFilters} radius={radius} updateRadius={updateRadius}/>\n        </ColumnDiv>\n        <ColumnDiv className=\"column middle\">\n        <ReactMapGL\n            {...viewport}\n            mapboxApiAccessToken=\"pk.eyJ1IjoibXMxOTA3IiwiYSI6ImNrNjhjMXB0eTAzZjUzZm9nbmQzMGc4Y3QifQ.ZuJyRlBq6Wo2l_RPrARpnQ\"\n          mapStyle=\"mapbox://styles/ms1907/ck68cppyd0bbp1ipm1z710o6z\"\n                \n          onDblClick={handleClick}\n          onClick={() => {\n              updateCheckDataCon(false); \n              console.log(\"CHECK\"); \n              console.log(() => {handleRequest()});\n              handleRequest();\n            }\n          }\n            >\n              <Marker key={\"a\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-800} offsetTop={-400}>\n                      </Marker>\n\n                     \n              {markers.map((m, i) =>\n                <div>\n                  <Marker {...m} key={i} draggable={true} onDrag={handleClick}>\n                      <svg height={SIZE}\n                          viewBox=\"0 0 24 24\"\n                          className=\"aaa\"\n                          style={{\n                            cursor: 'pointer',\n                            fill: isHovered ? '#333' : '#d00',\n                            stroke: 'none',\n                            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n                          }}\n                          onClick={() => {setCheck(true); updateCheckDataCon(true); console.log(markers)}}\n                          onMouseEnter={()=>{updateIsHovered(true)}}\n                          onMouseLeave={()=>{updateIsHovered(false)}}\n                        >\n                        <path d={ICON} />\n                      </svg>\n                  </Marker>\n                  <Marker {...m} key={i+1} draggable={true} onDrag={handleClick} offsetLeft={-50*radius} offsetTop={-50*radius}>\n                    <MyCircle r={radius*50} fill={{color:'#2409ba'}}/>\n\n                  </Marker>\n                  \n                </div>\n              )}\n          </ReactMapGL>\n        </ColumnDiv>\n        <ColumnDiv className=\"column right\" id=\"right-col\" >\n          <DataContainer markers={markers} setCheck={setCheck} updateCheckDataCon={updateCheckDataCon} radius={radius} categoryData={categoryData}/>\n        </ColumnDiv>\n      </div>\n      \n    );\n  \n}\n\n\n","import React, {useState, Component} from \"react\";\nimport styled from \"styled-components\";\nimport ReactMapGL, {Marker, Popup} from \"react-map-gl\";\nimport LeftContainer from \"./LeftContainer\";\nimport DataContainer from \"./DataContainer\"\n\nexport default class Map extends Component {\n  state = {\n    showPopup: true,\n    viewport: {\n      latitude: 47.6062,\n      longitude: -122.3321,\n      width: \"100vw\",\n      height: \"95vh\",\n      zoom: 11.5\n    },\n    markersLat: null,\n    markersLong: null,\n  };\n\n_onViewportChange = viewport => this.setState({viewport});\n  render() {\n    const {showPopup, viewport, markersLat, markersLong} = this.state;\n    return (\n      <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken=\"pk.eyJ1IjoibXMxOTA3IiwiYSI6ImNrNjhjMXB0eTAzZjUzZm9nbmQzMGc4Y3QifQ.ZuJyRlBq6Wo2l_RPrARpnQ\"\n          mapStyle=\"mapbox://styles/ms1907/ck68cppyd0bbp1ipm1z710o6z\"\n          onViewportChange={this._onViewportChange}\n        >\n        {showPopup && <Popup\n          latitude={viewport.latitude}\n          longitude={viewport.longitude}\n          closeButton={true}\n          closeOnClick={false}\n          onClose={() => this.setState({showPopup: false})}\n          anchor=\"top\" >\n          <div>You are here</div>\n        </Popup>}\n        <Marker key={\"a\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-900} offsetTop={-400}>\n            <LeftContainer/>\n         </Marker>\n\n         <Marker key={\"ab\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={500} offsetTop={-400}>\n            <DataContainer/>\n          </Marker>\n      </ReactMapGL>\n    );\n  }\n}","import React, {useState, Component} from \"react\";\nimport ReactMapGL, {Marker} from \"react-map-gl\";\nimport * as zipCode from \"./zip-code.json\";\nimport {Button, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport PieChart from 'react-minimal-pie-chart';\nimport Header from \"./Header\";\nimport LeftContainer from \"./LeftContainer\";\nimport BigMap from \"./BigMap\";\nimport Map from \"./Map\";\n\nexport default class App extends Component {\n\n    render() {\n      console.log(\"IM IN APP.JS\")\n      \n    return (\n        <div>\n          <Header/>\n          <BigMap/>\n        </div>\n      );\n    }\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/map.e1d7f378.geojson\";"],"sourceRoot":""}