{"version":3,"sources":["map.geojson","Header.js","LeftContainer.js","DataContainer.js","BigMap.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","styled","div","Title","valuetext","value","LeftContainer","props","CustomSlider","Slider","Space","h4","defaultValue","radius","getAriaValueText","aria-labelledby","max","min","step","marks","label","valueLabelDisplay","onChange","event","r","updateRadius","IconButton","Loading","pieData","barData","labels","data","color","count","crime","this","categoryData","randomColor","Math","floor","random","toString","push","datasets","backgroundColor","hoverBackgroundColor","lastCrimeScore","barLabels","bData","year","yearData","borderColor","hoverBorderColor","markers","length","formatPieData","formatBarData","height","PureComponent","BigMap","useState","setMarkers","setCategoryData","setYearData","handleClick","lngLat","longitude","latitude","category_http","axios","get","then","response","updateCheckDataCon","year_http","MyCircle","Container","Circle","width","zoom","viewport","Marker","isHovered","checkDataCon","check1","check2","check3","check4","check5","check6","filters","updateFilters","ColumnDiv","Headline","setCheck","className","mapboxApiAccessToken","mapStyle","onDblClick","onClick","key","offsetLeft","offsetTop","map","m","i","draggable","onDrag","viewBox","style","cursor","fill","stroke","transform","d","id","Component","App","console","log","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.370f6d8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.e1d7f378.geojson\";","import React, {useState, PureComponent} from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Header() {\n    const Header = styled.div`\n    background: pink;\n  `;\n\n    const Title = styled.div`\n    margin: 0 0;\n    padding: 0px 800px;\n    font-size: 1.5em;\n    display: inline-block;\n\n  `;\n\n\n    return(\n\n      <Header>\n        <Title>CRIME IN SEATTLE</Title>\n      </Header>\n    );\n\n\n}\n","import React, {useState, PureComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"react-bootstrap\";\nimport Slider from '@material-ui/core/Slider';\nimport Checkbox from '@material-ui/core/CheckBox';\nimport ReactMapGL, {Marker} from \"react-map-gl\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function LeftContainer(props) {\n\nconst marks = [\n  {\n    value: 0,\n    label: '0',\n  },\n  {\n    value: 0.25,\n    label: '0.25',\n  },\n  {\n    value: 0.5,\n    label: '0.5',\n  },\n  {\n      value: 0.75,\n      label: '0.75',\n   },\n  {\n    value: 1,\n    label: '1',\n  },\n];\n\n\n\n//     const InfoBox = styled.div`\n//           height: 400px;\n//           width: 400px;\n//           margin: 20px 0px 0px 10px;\n//           background: white;\n//    `;\n//    const Box = styled.div`\n//              height: 100px;\n//              width: 350px;\n//              background: white;\n//       `;\n   const CustomSlider = styled(Slider)`\n        // padding: 50px;\n   `;\n\n   const Space = styled.h4`\n      margin: 50px 0px 10px 0px;\n   `;\n\n        return(\n            <div>\n                <h3>Find how much crime occurs around you?</h3>\n                <p>Double click anywhere on a map and we will tell\n                you how much crime occurs around that area.\n                You can adjust the radius of the crime area\n                With this handy dandy slider below:</p>\n                <Space>CIRCLE RADIUS IN MILES</Space>\n                <div>\n                    <CustomSlider\n                        defaultValue={props.radius}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        max={1}\n                        min={0}\n                        step={0.05}\n                        marks={marks}\n                        valueLabelDisplay=\"auto\"\n                        onChange={(event, r)=>{props.updateRadius(r)}}\n                      />\n                </div>\n                {/* <FormControlLabel\n                    control={\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                         }\n                         label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                    }\n                    label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                         }\n                         label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                    }\n                    label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                            <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                         }\n                         label=\"Secondary\"\n                />\n                <FormControlLabel\n                    control={\n                        <Checkbox checked={false} onChange={()=>{}} value=\"checkedA\" />\n                    }\n                    label=\"Secondary\"\n                /> */}\n            </div>\n        );\n\n\n}\n","import React, {useState, PureComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"react-bootstrap\";\nimport Slider from '@material-ui/core/Slider';\nimport ReactMapGL, {Marker} from \"react-map-gl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n// import PieChart from 'react-minimal-pie-chart';\nimport BarChart from 'react-bar-chart';\n\nimport {Pie, Bar} from 'react-chartjs-2';\n\n\n\nconst CloseButton = styled(IconButton)`\n    margin: 0px; 0px;\n`;\n\nconst Headline = styled.div`\n    font-weight: bold;\n    font-size: 2em;\n    text-align: center;\n`;\n\nconst Loading = styled.div`\n    text-align: center;\n    font-size: 2em;\n    margin: 100px 0px;\n`;\n\n\n// const piedata = {\n// \tlabels: [\n// \t\t'Red',\n// \t\t'Blue',\n// \t\t'Yellow'\n// \t],\n// \tdatasets: [{\n// \t\tdata: [300, 50, 100],\n// \t\tbackgroundColor: [\n// \t\t'#FF6384',\n// \t\t'#36A2EB',\n// \t\t'#FFCE56'\n// \t\t],\n// \t\thoverBackgroundColor: [\n// \t\t'#FF6384',\n// \t\t'#36A2EB',\n// \t\t'#FFCE56'\n// \t\t]\n// \t}]\n// };\n\n\n// bar data\n\n// labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n// datasets: [\n//   {\n//     label: 'My First dataset',\n//     backgroundColor: 'rgba(255,99,132,0.2)',\n//     borderColor: 'rgba(255,99,132,1)',\n//     borderWidth: 1,\n//     hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n//     hoverBorderColor: 'rgba(255,99,132,1)',\n//     data: [65, 59, 80, 81, 56, 55, 40]\n//   }\n// ]\n\nconst NUM_BUCKETS = 15\n\nvar pieData = {};\nvar barData = {};\n\nvar crimesTotal = 0;\n\nexport default class LeftContainer extends PureComponent {\n    formatPieData() {\n        let labels = [];\n        let data = [];\n        let color = [];\n\n        let count = 0;\n        for (const crime in this.props.categoryData) {\n            count++;\n            if (count < NUM_BUCKETS) {\n                const randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n                labels.push(crime);\n                data.push(this.props.categoryData[crime]);\n                color.push(randomColor);\n            }\n        }\n\n        pieData = {\n            labels: labels,\n            datasets: [{\n                data: data,\n                backgroundColor: color,\n                hoverBackgroundColor: color\n            }]\n        };\n    }\n\n    formatBarData() {\n        let lastCrimeScore = 0;\n        let barLabels = [];\n        let bData = [];\n        for (const year in this.props.yearData) {\n            if (year > 2008) {\n                barLabels.push(year);\n                bData.push(this.props.yearData[year]);\n                lastCrimeScore = this.props.yearData[year];\n            }\n        }\n        barData = {\n            labels: barLabels,\n            datasets: [\n            {\n                label: \"Crimes per Year\",\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: bData\n            }\n        ]};\n        return lastCrimeScore;\n    }\n\n    calculateCrimeScore() {\n\n    }\n\n    render() {\n        if (this.props.markers.length === 0 || !this.props.categoryData) {\n            return <Loading>Loading...</Loading>;\n        } else {\n            this.formatPieData();\n            let lastYearNumOfCrimes = this.formatBarData();            \n            return(\n                <div>\n                    <div>\n                        <h2>Crime Type</h2>\n                    <Pie data={pieData}\n                    height={500}/>\n                    </div>\n                    <div>\n                        <h2>Crimes per Year</h2>\n                        <Bar data={barData}\n                            height={400}/>\n                    </div>\n                </div>\n            );\n            \n        }\n    }\n}\n","import React, {useState, PureComponent} from \"react\";\nimport ReactMapGL, {Marker, Layer} from \"react-map-gl\";\nimport * as zipCode from \"./zip-code.json\";\nimport {Button, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport Header from \"./Header\";\nimport LeftContainer from \"./LeftContainer\";\nimport data from \"./map.geojson\";\nimport DataContainer from \"./DataContainer\";\nimport {Rectangle, Circle, Ellipse, Line, Polyline, CornerBox, Triangle} from 'react-shapes';\n\nimport axios from 'axios'\n\n\n\n\nexport default function BigMap() {\n\n    const SIZE = 20;\n    const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n    c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n    C20.1,15.8,20.2,15.8,20.2,15.7z`;\n    const [count,setCount] = useState(0);\n    const [countt,setCountt] = useState(0);\n\n    const [radius, updateRadius] = useState(0.5);\n    const [markers, setMarkers] = useState([]);\n\n    const [categoryData, setCategoryData] = useState(null);\n    const [yearData, setYearData] = useState(null);\n\n    const CATEGORY_ENDPOINT = \"http://ec2-18-188-137-58.us-east-2.compute.amazonaws.com:8000/crimes/\";\n    const YEAR_ENDPOINT = \"http://ec2-18-188-137-58.us-east-2.compute.amazonaws.com:8000/crimes/year/\";\n\n    const handleClick = ({lngLat: [longitude, latitude]}) => {\n      setMarkers(markers => [{longitude, latitude}]);\n      const category_http = CATEGORY_ENDPOINT + longitude + \"/\" + latitude + \"/\" + radius;\n      axios.get(category_http)\n      .then((response) => {\n        setCategoryData(response.data);\n      });\n      updateCheckDataCon(true);\n      const year_http = YEAR_ENDPOINT + longitude + \"/\" + latitude + \"/\" + radius;\n      axios.get(year_http)\n      .then((response) => {\n        setYearData(response.data);\n      });\n    }\n\n  const Map = styled(Container)`\n        height: 500px;\n        width: 600px;\n        margin: 200px 0px 0px 1300px;\n        background: white;\n  `;\n\n  const MyCircle = styled(Circle)`\n    opacity: 0.2;\n  `;\n\n  const [viewport,setViewport] = useState({\n    latitude: 47.6062,\n    longitude: -122.3321,\n    width: \"100%\",\n    height: \"95vh\",\n    zoom: 10.5\n  });\n\n  const MyMarker = styled(Marker)`\n    background: white;\n  `;\n\n    const [isHovered, updateIsHovered] = useState(false);\n\n    const [checkDataCon, updateCheckDataCon] = useState(false);\n\n  const [filters, updateFilters] = useState({\n    check1: true,\n    check2: false,\n    check3: false,\n    check4: false,\n    check5: false,\n    check6: false\n  });\n\n  const ColumnDiv = styled.div`\n    float: left;\n    padding: 10px;\n    width: 30%;\n    word-wrap: break-word;\n  `;\n  const Headline = styled.div`\n      font-weight: bold;\n      font-size: 2em;\n      text-align: center;\n  `;\n\n\n  const [check, setCheck] = useState(false);\n\n  const [status, updateStatus] = useState(null);\n\n  const handleRequest = () => {\n      setMarkers([]);\n      updateCheckDataCon(false);\n    }\n\n\n\n    return (\n      <div>\n        <ColumnDiv className=\"column left\">\n          <LeftContainer filters={filters} updateFilters={updateFilters} radius={radius} updateRadius={updateRadius}/>\n        </ColumnDiv>\n        <ColumnDiv className=\"column middle\">\n        <ReactMapGL\n            {...viewport}\n            mapboxApiAccessToken=\"pk.eyJ1IjoibXMxOTA3IiwiYSI6ImNrNjhjMXB0eTAzZjUzZm9nbmQzMGc4Y3QifQ.ZuJyRlBq6Wo2l_RPrARpnQ\"\n          mapStyle=\"mapbox://styles/ms1907/ck68cppyd0bbp1ipm1z710o6z\"\n\n          onDblClick={handleClick}\n          onClick={() => {\n              handleRequest();\n            }\n          }\n            >\n              <Marker key={\"a\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-800} offsetTop={-400}>\n                      </Marker>\n\n\n              {markers.map((m, i) =>\n                <div>\n                  <Marker {...m} key={i} draggable={true} onDrag={handleClick}>\n                      <svg height={SIZE}\n                          viewBox=\"0 0 24 24\"\n                          className=\"aaa\"\n                          style={{\n                            cursor: 'pointer',\n                            fill: isHovered ? '#333' : '#d00',\n                            stroke: 'none',\n                            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n                          }}\n                          onClick={() => {setCheck(true); updateCheckDataCon(true);}}\n                        >\n                        <path d={ICON} />\n                      </svg>\n                  </Marker>\n                  <Marker {...m} key={i+1} draggable={true} onDrag={handleClick} offsetLeft={-50*radius} offsetTop={-50*radius}>\n                    <MyCircle r={radius*48} fill={{color:'#2409ba'}}/>\n\n                  </Marker>\n\n                </div>\n              )}\n          </ReactMapGL>\n        </ColumnDiv>\n        <ColumnDiv className=\"column right\" id=\"right-col\" >\n          <Headline>Crime Data</Headline>\n          {checkDataCon && <DataContainer markers={markers} setCheck={setCheck} updateCheckDataCon={updateCheckDataCon} radius={radius} categoryData={categoryData} yearData={yearData}/>\n        }\n        </ColumnDiv>\n      </div>\n\n    );\n\n}\n","import React, {useState, Component} from \"react\";\nimport styled from \"styled-components\";\nimport ReactMapGL, {Marker, Popup} from \"react-map-gl\";\nimport LeftContainer from \"./LeftContainer\";\nimport DataContainer from \"./DataContainer\"\n\nexport default class Map extends Component {\n  state = {\n    showPopup: true,\n    viewport: {\n      latitude: 47.6062,\n      longitude: -122.3321,\n      width: \"100vw\",\n      height: \"95vh\",\n      zoom: 11.5\n    },\n    markersLat: null,\n    markersLong: null,\n  };\n\n_onViewportChange = viewport => this.setState({viewport});\n  render() {\n    const {showPopup, viewport, markersLat, markersLong} = this.state;\n    return (\n      <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken=\"pk.eyJ1IjoibXMxOTA3IiwiYSI6ImNrNjhjMXB0eTAzZjUzZm9nbmQzMGc4Y3QifQ.ZuJyRlBq6Wo2l_RPrARpnQ\"\n          mapStyle=\"mapbox://styles/ms1907/ck68cppyd0bbp1ipm1z710o6z\"\n          onViewportChange={this._onViewportChange}\n        >\n        {showPopup && <Popup\n          latitude={viewport.latitude}\n          longitude={viewport.longitude}\n          closeButton={true}\n          closeOnClick={false}\n          onClose={() => this.setState({showPopup: false})}\n          anchor=\"top\" >\n          <div>You are here</div>\n        </Popup>}\n        <Marker key={\"a\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-900} offsetTop={-400}>\n            <LeftContainer/>\n         </Marker>\n\n         <Marker key={\"ab\"} latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={500} offsetTop={-400}>\n            <DataContainer/>\n          </Marker>\n      </ReactMapGL>\n    );\n  }\n}","import React, {useState, Component} from \"react\";\nimport ReactMapGL, {Marker} from \"react-map-gl\";\nimport * as zipCode from \"./zip-code.json\";\nimport {Button, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport PieChart from 'react-minimal-pie-chart';\nimport Header from \"./Header\";\nimport LeftContainer from \"./LeftContainer\";\nimport BigMap from \"./BigMap\";\nimport Map from \"./Map\";\n\nexport default class App extends Component {\n\n    render() {\n      console.log(\"IM IN APP.JS\")\n      \n    return (\n        <div>\n          <Header/>\n          <BigMap/>\n        </div>\n      );\n    }\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}